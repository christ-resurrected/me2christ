append head
  style: include scripture.css
-
  log = console.log

  function expand(refs) {
    refs = refs.replaceAll('Deut.', 'Deuteronomy ').replaceAll('Psa.', 'Psalms ').replaceAll('Is.', 'Isaiah ').replaceAll('Jer.', 'Jeremiah ').replaceAll('Eze.', 'Ezekiel ')
    return refs.replaceAll('Mat.', 'Matthew ').replaceAll('Rom.', 'Romans ').replaceAll('Cor.', 'Corinthians ').replaceAll('Gal.', 'Galatians ').replaceAll('Eph.', 'Ephesians ').replaceAll('Php.', 'Philippians ').replaceAll('Col.', 'Colossians ').replaceAll('2-Thes.', '2-Thessalonians ').replaceAll('Tim.', 'Timothy ').replaceAll('Heb.', 'Hebrews ').replaceAll('Pet.', 'Peter ').replaceAll('Rev.', 'Revelation ')
  }

  function finalise(refs) { return refs.replaceAll(/-(\d+)/g, '&ndash;$1') }

  // for a given book e.g. "Mat.5:27-30, 7:21-23, 24:50,51" returns the text and tooltip
  function parseBook(bookrefs) {
    var chapters = bookrefs.trim().split(' ')
    var book = chapters[0].replace('-', ' ')
    var tooltip = ''
    for (var i = 1; i < chapters.length; i++) {
      var chapPassages = chapters[i].split(':')
      if (chapPassages.length != 2) continue;
      var passages = chapPassages[1].replace(/,$/, '').split(',')
      for (const p of passages) {
        var verses = p.split('-')
        if (verses.length == 1) verses.push(verses[0]);
        if (verses.length != 2) continue;
        var from = Number(verses[0]), to = Number(verses[1])
        if (to - from > 15) continue;
        for (var j = from; j <= to; j++) {
          var ref = `${book} ${chapPassages[0]}:${j}`
          tooltip += VERSES[ref] + ' '
        }
      }
      if (i < chapters.length - 1) tooltip += '|'
    }
    tooltip = tooltip.replaceAll('|', '<br/><br/>')
    text = finalise(bookrefs)
    return [text, tooltip]
  }

// separate books by semicolon and chapters by comma e.g. [Matthew 5:27, 13:47,48; Luke 12:4-5]
mixin refs(refs)
  - var books = expand(refs).split(';')
  each bookrefs in books
    - const [text, tooltip] = parseBook(bookrefs)
    = ' '
    if (tooltip.length)
      mark.tooltip!= text
        span.tooltiptext!= tooltip
    else
      mark!= bookrefs
  if block
    = ' '
    block

mixin see(refs, label='See')
  - if (!refs) return
  span.ml-1 (
  = label
  +refs(refs)
  | )
  block

mixin seeAlso(refs)
  +see(refs, 'See also')

mixin verse(ref)
  .verse.tooltip-anchor
    if attributes.pre
      span.pre= attributes.pre
    span.body
      block
    span.dash &ndash;
    - ref = finalise(expand(ref))
    mark!= ref
    +seeAlso(attributes.seeAlso)
